%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F37) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 846 594
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 846 594
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 846 594 rc
0 0 m
846 0 l
846 594 l
0 594 l
h
f
0.60000002 i
0 0 0 sc
0.99101543 272.90097 m
19.316212 279.08261 l
0.99101543 285.19101 l
0.99101543 288.45761 l
22.509571 280.60605 l
22.509571 277.51523 l
0.99101543 269.67831 l
h
20.136524 293.7164 m
20.575979 294.27304 20.795704 294.93222 20.795704 295.69394 c
20.795704 296.62167 20.580862 297.52011 20.151173 298.38925 c
19.438278 299.8541 18.271297 300.58652 16.650196 300.58652 c
14.526172 300.58652 l
14.731251 300.26425 14.902147 299.84921 15.038867 299.3414 c
15.175587 298.83359 15.273242 298.33554 15.331836 297.84726 c
15.536914 296.25058 l
15.663868 295.29355 15.864061 294.57578 16.137501 294.09726 c
16.596487 293.28671 17.328901 292.88144 18.334766 292.88144 c
19.096487 292.88144 19.697067 293.15976 20.136524 293.7164 c
h
13.002734 299.26816 m
12.924609 299.87363 12.670705 300.2789 12.241015 300.48398 c
12.006639 300.60117 11.669728 300.65976 11.230273 300.65976 c
10.331831 300.65976 9.6799822 300.33994 9.2747068 299.70029 c
8.8694315 299.06064 8.6667967 298.14511 8.6667967 296.9537 c
8.6667967 295.57675 9.0378866 294.60019 9.7800779 294.02402 c
10.190236 293.70175 10.800582 293.49179 11.611133 293.39413 c
11.611133 290.9332 l
9.6775293 290.98203 8.3323278 291.60947 7.5754881 292.81552 c
6.8186483 294.02158 6.4402342 295.4205 6.4402342 297.0123 c
6.4402342 298.858 6.7917933 300.35703 7.4949217 301.50937 c
8.1980505 302.65195 9.2917891 303.22324 10.776172 303.22324 c
19.814259 303.22324 l
20.087696 303.22324 20.307421 303.27939 20.473438 303.39169 c
20.639454 303.504 20.722462 303.74081 20.722462 304.10214 c
20.722462 304.21933 20.715137 304.35117 20.700489 304.49765 c
20.685839 304.64413 20.663868 304.80038 20.634571 304.9664 c
22.582813 304.9664 l
22.700001 304.55624 22.773241 304.24374 22.80254 304.0289 c
22.831837 303.81406 22.846485 303.52109 22.846485 303.14999 c
22.846485 302.24179 22.524221 301.58261 21.879688 301.17245 c
21.537889 300.95761 21.054495 300.80624 20.429493 300.71835 c
21.13262 300.18124 21.742966 299.40976 22.260548 298.4039 c
22.778128 297.39804 23.036915 296.28964 23.036915 295.0787 c
23.036915 293.62363 22.595024 292.43466 21.711231 291.51181 c
20.827436 290.58896 19.721491 290.12753 18.39336 290.12753 c
16.938274 290.12753 15.810355 290.58163 15.00957 291.48984 c
14.208785 292.39804 13.715626 293.58945 13.530078 295.06406 c
h
0.99101543 307.61777 m
0.99101543 310.25449 l
22.509571 310.25449 l
22.509571 307.61777 l
h
6.8210936 316.84628 m
17.236134 316.84628 l
18.036919 316.84628 18.691208 316.97324 19.199024 317.22714 c
20.136528 317.69589 20.605272 318.56992 20.605272 319.84921 c
20.605272 321.68515 19.784969 322.93515 18.144335 323.59921 c
17.265425 323.96054 16.059383 324.1412 14.526172 324.1412 c
6.8210936 324.1412 l
6.8210936 326.77792 l
22.509569 326.77792 l
22.509569 324.28769 l
20.195116 324.31699 l
20.790823 323.97519 21.293747 323.55038 21.703905 323.04257 c
22.524223 322.03671 22.934374 320.81601 22.934374 319.38046 c
22.934376 317.14413 22.187311 315.6207 20.693165 314.81015 c
19.892378 314.3707 18.823053 314.15097 17.485157 314.15097 c
6.8210936 314.15097 l
h
7.2532225 340.66464 m
7.7756858 341.70956 8.4519491 342.50546 9.2820311 343.05234 c
10.07305 343.57968 10.995893 343.93124 12.050586 344.10703 c
12.773246 344.26328 13.925578 344.3414 15.507617 344.3414 c
15.507617 332.84238 l
17.099422 332.8912 18.376265 333.26718 19.338182 333.97031 c
20.300102 334.67343 20.781054 335.7623 20.781054 337.23691 c
20.781054 338.61386 20.326958 339.71249 19.418749 340.53281 c
18.891403 341.00156 18.281057 341.33359 17.587694 341.5289 c
17.587694 344.12167 l
18.16387 344.05331 18.805954 343.82626 19.513964 343.44052 c
20.221975 343.05478 20.800583 342.62265 21.249804 342.14413 c
22.031059 341.34335 22.558397 340.35214 22.831835 339.1705 c
22.988087 338.53574 23.06621 337.81796 23.06621 337.01718 c
23.06621 335.06406 22.355768 333.40878 20.934862 332.05136 c
19.513958 330.69394 17.524231 330.01523 14.965625 330.01523 c
12.446081 330.01523 10.400203 330.69882 8.8279295 332.06601 c
7.2556562 333.4332 6.4695311 335.22031 6.4695311 337.42734 c
6.4695311 338.54062 6.7307591 339.61972 7.2532225 340.66464 c
h
13.41289 341.63144 m
12.270307 341.52402 11.35723 341.27499 10.673633 340.88437 c
9.4040947 340.16171 8.7693357 338.95566 8.7693357 337.2662 c
8.7693357 336.05527 9.2063427 335.03964 10.080371 334.21933 c
10.954399 333.39902 12.065228 332.96445 13.41289 332.91562 c
h
22.509569 345.64511 m
f
413.55353 103.85899 m
413.55353 101.29551 l
406.30255 101.29551 l
406.30255 82.340431 l
403.34357 82.340431 l
403.34357 101.29551 l
396.09259 101.29551 l
396.09259 103.85899 l
h
415.86798 97.955666 m
418.54865 97.955666 l
418.54865 82.340431 l
415.86798 82.340431 l
h
415.86798 103.85899 m
418.54865 103.85899 l
418.54865 100.8707 l
415.86798 100.8707 l
h
422.53302 98.028908 m
425.14044 98.028908 l
425.14044 95.802345 l
425.76544 96.573837 426.33185 97.135353 426.83966 97.486916 c
427.7088 98.082619 428.69513 98.38047 429.79865 98.38047 c
431.04865 98.38047 432.0545 98.072853 432.81622 97.457619 c
433.24591 97.106056 433.63654 96.588478 433.9881 95.904884 c
434.57404 96.744736 435.26251 97.367287 436.05353 97.77256 c
436.84454 98.177834 437.73322 98.38047 438.71954 98.38047 c
440.82892 98.38047 442.26447 97.618759 443.02618 96.095314 c
443.43634 95.274994 443.64142 94.171494 443.64142 92.784767 c
443.64142 82.340431 l
440.90216 82.340431 l
440.90216 93.238869 l
440.90216 94.283798 440.64093 95.001564 440.11847 95.392189 c
439.59601 95.782814 438.9588 95.978127 438.20685 95.978127 c
437.17169 95.978127 436.28058 95.631447 435.53351 94.938087 c
434.78644 94.244728 434.4129 93.087509 434.4129 91.466408 c
434.4129 82.340431 l
431.73224 82.340431 l
431.73224 92.579689 l
431.73224 93.64415 431.60529 94.420509 431.35138 94.908791 c
430.95099 95.641212 430.20392 96.007423 429.11017 96.007423 c
428.11407 96.007423 427.20831 95.621689 426.39288 94.850197 c
425.57745 94.078705 425.16974 92.682236 425.16974 90.660744 c
425.16974 82.340431 l
422.53302 82.340431 l
h
457.29376 97.596779 m
458.33868 97.074318 459.13458 96.398056 459.68146 95.56797 c
460.2088 94.776947 460.56036 93.854111 460.73615 92.799416 c
460.8924 92.076759 460.97052 90.924423 460.97052 89.342384 c
449.4715 89.342384 l
449.52032 87.75058 449.8963 86.47374 450.59943 85.511818 c
451.30255 84.549896 452.39142 84.068947 453.86603 84.068947 c
455.24298 84.068947 456.34161 84.523041 457.16193 85.431252 c
457.63068 85.958595 457.96271 86.568947 458.15802 87.262306 c
460.75079 87.262306 l
460.68243 86.686134 460.45538 86.044044 460.06964 85.336037 c
459.6839 84.628029 459.25177 84.049416 458.77325 83.600197 c
457.97247 82.818939 456.98126 82.291603 455.79962 82.018166 c
455.16486 81.861916 454.44708 81.783791 453.6463 81.783791 c
451.69318 81.783791 450.0379 82.494232 448.68048 83.915138 c
447.32306 85.336044 446.64435 87.325768 446.64435 89.884377 c
446.64435 92.403923 447.32794 94.449799 448.69513 96.022072 c
450.06232 97.594345 451.84943 98.38047 454.05646 98.38047 c
455.16974 98.38047 456.24884 98.11924 457.29376 97.596779 c
h
458.26056 91.437111 m
458.15314 92.579697 457.90411 93.492775 457.51349 94.176369 c
456.79083 95.445908 455.58478 96.080666 453.89532 96.080666 c
452.68439 96.080666 451.66876 95.643661 450.84845 94.76963 c
450.02814 93.895599 449.59357 92.784775 449.54474 91.437111 c
h
462.27423 82.340431 m
f
1 j
1 0 0 1 0.5 0.5 cm
35.700001 502.70001 m
35.700001 110.15 l
820.75 110.15 l
820.75 502.70001 l
35.700001 502.70001 l
h
35.700001 502.70001 m
S
1 0 0 sc
35.700001 306.45001 m
35.700001 306.45001 l
114.2 306.45001 l
192.7 306.45001 l
271.20001 306.45001 l
349.70001 306.45001 l
428.25 306.45001 l
428.25 110.15 l
S
0 0 0 sc
35.700001 502.70001 m
35.700001 110.15 l
820.75 110.15 l
820.75 502.70001 l
35.700001 502.70001 l
h
35.700001 502.70001 m
S
ep
end
%%Trailer
%%EOF
